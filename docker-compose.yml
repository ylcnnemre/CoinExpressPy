version: '3.8'

services:
  mongodb:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234abcDn
    volumes:
      - mongodb_data:/data/db
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.9.4-management
    restart: always
    ports:
      - '5672:5672' 
      - '15672:15672' 
    environment:
      RABBITMQ_DEFAULT_USER: guest 
      RABBITMQ_DEFAULT_PASS: 12345*x
    networks:
      - mynetwork

  redis:
    image: redis
    restart: always
    ports:
      - '5679:6379'
    command: redis-server --requirepass mypassword*1xw
    networks:
      - mynetwork

  python-app:
    build:
      context: ./pythonta
      dockerfile: dockerfile
    volumes:
      - ./pythonta:/app
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    networks:
      - mynetwork

  node-app:
    build:
      context: .
      dockerfile: NodeApp/Dockerfile
    ports:
      - '5000:5000'
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
      - redis
      - python-app
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - node-app
    networks:
      - mynetwork

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done'"
    networks:
      - mynetwork

volumes:
  mongodb_data:

networks:
  mynetwork:
    driver: bridge
