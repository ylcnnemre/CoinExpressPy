version: '3.8'

services:
  postgresql:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234abcDn
      POSTGRES_DB: mydatabase
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.9.4-management
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: 12345*x
    networks:
      - mynetwork

  redis:
    image: redis
    restart: always
    ports:
      - '5679:6379'
    command: redis-server --requirepass mypassword*1xw
    networks:
      - mynetwork

  python-app:
    build:
      context: ./pythonta
      dockerfile: dockerfile
    volumes:
      - ./pythonta:/app
    restart: always
    depends_on:
      - postgresql
      - rabbitmq
      - redis
    networks:
      - mynetwork

  # node-app:
  #   build:
  #     context: .
  #     dockerfile: NodeApp/Dockerfile
  #   ports:
  #     - '5000:5000'
  #   restart: always
  #   depends_on:
  #     - postgresql
  #     - rabbitmq
  #     - redis
  #     - python-app
  #   networks:
  #     - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=myelasticpassword*123
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - mynetwork
    volumes:
      - es_data:/usr/share/elasticsearch/data
volumes:
  postgresql_data:
  es_data:
networks:
  mynetwork:
    driver: bridge
